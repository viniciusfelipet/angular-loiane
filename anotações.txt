Angular - Arquitetura:

- Modulo/Module -> Component + HTML -> Service ...

HTML (view): representa os dados que estão no COMPONENT (controller), que por sua vez pegas os dados retornados do SERVICE, responsável por fazer a comunicação e requisições com o servidor.

COMPONENT (controller):  é simplesmente a Controller da View. Sim, a view é o HTML mesmo. É no component que nós cuidamos do que é necessário para trazer funcionalidade para as views, usando o Typescript para escrever o código. Por exemplo, é no component que nós usamos uma service para tazer valores e então passamos esses valores para alguma variável, para então poder exibí-la na view.
	- Dentro do component nós usamos um decorator chamado @Component para então declarar nossa View, o estilo(CSS,SASS e etc) e um seletor(nome do componente, que poderá ser chamado em outras views)
	
SERVICE: Responsável por fazer a comunicação e requisições com o servidor, operações CRUD, operações lógicas referente a regra de negócio e classes utilitárias (utils). Todos eles fornecem as informações obtidas para o component mostrar na view.

Modulo/Module: diferente dos components não controlam nenhuma view(html). Um Module se constitui de um ou mais components, ou seja, é lá que você registra seus components. Uma aplicação Angular tem de ter no mínimo um Module que contenha mínimo um Component. Além de registrar components, outras responsabilidades do Module são declarar qual ou quais components podem ser usados por components que são de outros Modules, quais services serão injetados e qual componente será o componente inicial. Os Modules gerenciam os components e é com eles que nós podemos modularizar nossa aplicação.

Resumindo: É como se o Module fosse um cômodo e os Components os móveis que preenchem aquele cômodo.

--------------------------------------------------------------------
- DataBinding:

<TEMPLATE HTML>	<--{{valor}}--------------------- <COMPONENT> Property Binding com Interpolação
<TEMPLATE HTML> <--[propriedade]="valor"--------- <COMPONENT> Property Binding com Class/Style
<TEMPLATE HTML> ---(evento)="metodo()"------------> <COMPONENT> Event Data Binding
<TEMPLATE HTML> <---[(ngModel)]="propriedade"---> <COMPONENT> Two Way Data Binding

--------------------------------------------------------------------
- Forms:

Estado:
-> Controle visitado - ng-touched (SIM) ou ng-untouched (NÃO)
-> Valor mudou - ng-dirty (SIM) ou ng-pristine (NÃO)
-> Controle válido - ng-valid (SIM) ou ng-invalid (NÃO)


